'use strict';

RMModule.factory('RMModelFactory', ['RMStaticApi', function(StaticApi) {

  return function(_baseUrl) {

    /**
     * @class Model
     * @extends CommonApi
     *
     * @property {string} $partial The model partial url, relative to the context.
     * @property {ModelCollection|Model} $context The model context (parent).
     * @property {promise} $promise The last request promise, returns the model.
     * @property {boolean} $pending The last request status.
     * @property {string} $error The last request error, if any.
     *
     * @description
     *
     * The base model type, this is the starting point for every model generated by $restmod.
     *
     * Inherits all static methods from {@link ModelCollection}.
     *
     * #### About object creation
     *
     * Direct construction of object instances using `new` is not recommended. A collection of
     * static methods are available to generate new instances of a model, for more information
     * read the {@link ModelCollection} documentation.
     */
    function Model(_scope, _pk) {
      this.$type = Model;
      this.$initialize(_scope, _pk);
    }

    extend(Model, StaticApi);
    Model.$initialize(_baseUrl);

    return Model;

  };

}]);
